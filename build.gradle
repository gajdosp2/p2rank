apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'idea'


group = 'cz.siret'
version = '2.2-dev.3'

description = 'Ligand binding site prediction based on machine learning.'


allprojects {
    apply plugin: 'java'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

repositories {

    jcenter()
    mavenCentral()
    mavenLocal()

	maven {
		url = "http://www.biojava.org/download/maven/"
	}
    maven {
		url = "https://maven.ch.cam.ac.uk/"
	}

    flatDir(dirs: 'lib')
}

sourceSets {
    main {
        resources {
            exclude 'scripts/out/*'
            exclude 'models/*'
        }
    }
}

processResources {
    filter org.apache.tools.ant.filters.ReplaceTokens, tokens: [
            "project_version": project.version
    ]
}

task(console, dependsOn: 'classes', type: JavaExec) {
    main = 'groovy.ui.Console'
    classpath = sourceSets.test.runtimeClasspath
}

task copyDependenciesToDist( type: Copy ) {
    into "$buildDir/../distro/bin/lib"
    from configurations.runtime
}

task copyBinaryToDist( type: Copy ) {
    dependsOn jar

    into "$buildDir/../distro/bin"
    from "$buildDir/bin"
    include "*.jar"
}

task copyDocumentation( type: Copy ) {
    into "$buildDir/../distro/"
    from "$buildDir/../"
    include "README.md", "LICENSE.txt"
}

assemble {
    dependsOn processResources
    dependsOn copyBinaryToDist
    dependsOn copyDependenciesToDist // copy dependencies to distro dir
    dependsOn copyDocumentation
}

jar {
    archiveFileName = "p2rank.jar"
    destinationDirectory = file("build/bin")

    manifest {
        attributes 'Main-Class': 'cz.siret.prank.program.Main'
    }
}

clean {
    delete "$buildDir/../distro/bin"
    delete "$buildDir/../distro/test_output"
    delete "$buildDir/../distro/log/prank.log"
}

test {

    // show standard out and standard error of the test JVM(s) on the console
    // testLogging.showStandardStreams = true

    // set heap size for the test JVM(s)
    maxHeapSize = "1512m"
    
    def distroDir = "$project.projectDir/distro"
    inputs.dir "$distroDir/test_data"
    inputs.files("$distroDir/models", "$distroDir/config/default.groovy")

    // listen to events in the test execution lifecycle
    beforeTest { descriptor ->
        logger.lifecycle("Running test: " + descriptor)
    }

    // listen to standard out and standard error of the test JVM(s)
    //    onOutput { descriptor, event ->
    //        logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message )
    //    }
    
}

configurations {
    runtime.extendsFrom implementation
}

dependencies {

    implementation 'org.codehaus.groovy:groovy-all:3.0.4'

    implementation 'org.codehaus.gpars:gpars:1.2.1'
    implementation 'org.apache.commons:commons-lang3:3.10'
    implementation 'commons-io:commons-io:2.7'
    implementation 'com.google.guava:guava:29.0-jre'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'org.zeroturnaround:zt-zip:1.14'
    implementation 'com.univocity:univocity-parsers:2.8.4' // csv parser
    implementation 'org.apache.commons:commons-csv:1.8'

    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.13.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.13.1'
    implementation 'org.slf4j:jul-to-slf4j:1.7.30'         // for netlib logging messages

    implementation 'org.biojava:biojava-core:5.3.0'
    implementation 'org.biojava:biojava-alignment:5.3.0'
    implementation 'org.biojava:biojava-structure:5.3.0'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'      // extra dependencies of biojava for java 11
    implementation 'com.sun.xml.bind:jaxb-core:2.3.0.1' // ~
    implementation 'com.sun.xml.bind:jaxb-impl:2.3.2'   // ~
    implementation 'javax.activation:activation:1.1.1'  // ~

    implementation 'org.openscience.cdk:cdk-qsarmolecular:2.3'    // for NumericalSurface class
    implementation 'org.openscience.cdk:cdk-data:2.3'             // for Atom class
    implementation 'nz.ac.waikato.cms.weka:weka-dev:3.9.4'
    implementation fileTree(dir: 'lib', include: '*.jar')

    testImplementation 'junit:junit:4.13'

}

